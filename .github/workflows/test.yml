name: Test

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  GO_VERSION: '1.23'
  MYSQL_ROOT_PASSWORD: root_password
  MYSQL_DATABASE: speadwear_test

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: |
          go mod download
          go get github.com/stretchr/testify/mock
          go mod tidy

      - name: Set up test environment
        env:
          DB_HOST: localhost
          DB_PORT: 3306
          DB_USER: root
          DB_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          DB_NAME: ${{ env.MYSQL_DATABASE }}
          JWT_SECRET: test-secret-key
          JWT_EXPIRATION: 24h
        run: |
          cp .env.example .env
          echo "DB_HOST=$DB_HOST" >> .env
          echo "DB_PORT=$DB_PORT" >> .env
          echo "DB_USER=$DB_USER" >> .env
          echo "DB_PASSWORD=$DB_PASSWORD" >> .env
          echo "DB_NAME=$DB_NAME" >> .env
          echo "JWT_SECRET=$JWT_SECRET" >> .env
          echo "JWT_EXPIRATION=$JWT_EXPIRATION" >> .env

      - name: Run linter
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
          golangci-lint run ./...

      - name: Run tests
        env:
          DB_HOST: localhost
          DB_PORT: 3306
          DB_USER: root
          DB_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          DB_NAME: ${{ env.MYSQL_DATABASE }}
        run: make ci-test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Generate coverage badge
        if: github.ref == 'refs/heads/main'
        run: |
          go install github.com/jpoles1/gopherbadger@latest
          gopherbadger -md="README.md"

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build application
        run: make build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: speadwear-binary
          path: bin/speadwear
          retention-days: 7